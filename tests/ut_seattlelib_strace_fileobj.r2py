#this unit test checks the functionality of the file traced object 

#pragma repy restrictions.default dylink.r2py encasementlib.r2py log_between_modules.r2py strace.r2py


# First dylink import gives: 
#  0.510231971741 Fatal Error: Function 'the_original_log_function' tried to raise exception of type: '<type 'exceptions.AttributeError'>' which is forbidden.
dy_import_module_symbols("librepyfile.r2py")
librepyfile = open("tracer.txt")

fielobj = openfile("hi.txt", True)

tracedcall = librepyfile.readline()

#Check apicall to traced call
if("openfile ('hi.txt', True)" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, openfile ('hi.txt', True)")
if("emulfile.emulated_file object"not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")


# #write something using trace call
fielobj.writeat("asdfasdf",0)

tracedcall = librepyfile.readline()

#Check apicall to traced call
if("file.writeat" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, writeat")
if("(\'asdfasdf\', 0)" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function with correct parameters, fielobj.writeat(\'asdfasdf\',0)")
if("emulfile.emulated_file object"not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")



#close file using trace call
fielobj.close()

#open traced file
tracedcall = librepyfile.readline()


#Check apicall to traced call
if("file.close" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, close")
if("emulfile.emulated_file object"not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")


#open existing file with trace call
fielobj = openfile("hi.txt", True)

#open traced file
tracedcall = librepyfile.readline()


#Check apicall to traced call
if("openfile" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, openfile")
if("(\'hi.txt\', True)" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function with correct parameters, openfile(\'hi.txt\', True)")
if("emulfile.emulated_file object"not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")

#read from file usiung trace call
fielobj.readat(0,4)

#open traced file
tracedcall = librepyfile.readline()



#Check apicall to traced call
if("file.readat" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, readat")
if("(0, 4)" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function with correct parameters, fileobj.readat (0, 4)")
if("emulfile.emulated_file object"not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")

#close file using trace call
fielobj.close()

#open traced file
tracedcall = librepyfile.readline()


#Check apicall to traced call
if("file.close" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, close")
if("emulfile.emulated_file object"not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")

librepyfile.close()