#this unit test checks the functionality of the strace socket object


#pragma repy restrictions.default dylink.r2py encasementlib.r2py log_between_modules.r2py strace.r2py


# First dylink import gives: 
#  0.510231971741 Fatal Error: Function 'the_original_log_function' tried to raise exception of type: '<type 'exceptions.AttributeError'>' which is forbidden.
dy_import_module_symbols("librepyfile.r2py")
librepyfile = open("tracer.txt")


localip = "127.0.0.1"
localport1 = 12345
localport2 = 12347
targetip = "127.0.0.1"
targetport = 12346
timeout = 1.0

conn = openconnection(targetip, targetport, localip, localport1, timeout)

tracedcall = librepyfile.readline()


#Check apicall to traced call
if("openconnection" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, openconnection")
if("('127.0.0.1', 12346, '127.0.0.1', 12345, 1.0)" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function with correct parameters, openconnection('127.0.0.1', 12346, '127.0.0.1', 12345, 1.0)")
if("emulcomm.EmulatedSocket" not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")



conn.send("Hi from repy program!")


tracedcall = librepyfile.readline()

#Check apicall to traced call
if("socket.send" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, socket.send")
if("('Hi from repy program!',)" not in tracedcall and "21" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function with correct parameters, send('Hi from repy program!',)")
if("emulcomm.EmulatedSocket" not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")


conn.recv(21)

tracedcall = librepyfile.readline()

#Check apicall to traced call
if("socket.recv" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, socket.send")
if("(21,)" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function with correct parameters, send('Hi from repy program!',)")
if("emulcomm.EmulatedSocket" not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")



conn.close()

tracedcall = librepyfile.readline()

#Check apicall to traced call
if("socket.close" not in tracedcall):
	the_original_log_function("Trace api call failed to trace correct function, socket.send")
if("emulcomm.EmulatedSocket" not in tracedcall):
	the_original_log_function("Failed to trace trace correct function as correct object")

librepyfile.close()
